//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CETRMS.WebReference {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeyStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendReportErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCusomerBuildVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommodityRatesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::CETRMS.Properties.Settings.Default.CETRMS_WebReference_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetKeyStatusCompletedEventHandler GetKeyStatusCompleted;
        
        /// <remarks/>
        public event GetProductValidationCompletedEventHandler GetProductValidationCompleted;
        
        /// <remarks/>
        public event ActivateKeyCompletedEventHandler ActivateKeyCompleted;
        
        /// <remarks/>
        public event SendReportErrorCompletedEventHandler SendReportErrorCompleted;
        
        /// <remarks/>
        public event GetLatestVersionCompletedEventHandler GetLatestVersionCompleted;
        
        /// <remarks/>
        public event GetVersionDetailsCompletedEventHandler GetVersionDetailsCompleted;
        
        /// <remarks/>
        public event UpdateCusomerBuildVersionCompletedEventHandler UpdateCusomerBuildVersionCompleted;
        
        /// <remarks/>
        public event GetCommodityRatesCompletedEventHandler GetCommodityRatesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKeyStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetKeyStatus(string LicenseKey) {
            object[] results = this.Invoke("GetKeyStatus", new object[] {
                        LicenseKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeyStatusAsync(string LicenseKey) {
            this.GetKeyStatusAsync(LicenseKey, null);
        }
        
        /// <remarks/>
        public void GetKeyStatusAsync(string LicenseKey, object userState) {
            if ((this.GetKeyStatusOperationCompleted == null)) {
                this.GetKeyStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeyStatusOperationCompleted);
            }
            this.InvokeAsync("GetKeyStatus", new object[] {
                        LicenseKey}, this.GetKeyStatusOperationCompleted, userState);
        }
        
        private void OnGetKeyStatusOperationCompleted(object arg) {
            if ((this.GetKeyStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeyStatusCompleted(this, new GetKeyStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductValidation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductValidation(string LicenseKey, string SystemID) {
            object[] results = this.Invoke("GetProductValidation", new object[] {
                        LicenseKey,
                        SystemID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductValidationAsync(string LicenseKey, string SystemID) {
            this.GetProductValidationAsync(LicenseKey, SystemID, null);
        }
        
        /// <remarks/>
        public void GetProductValidationAsync(string LicenseKey, string SystemID, object userState) {
            if ((this.GetProductValidationOperationCompleted == null)) {
                this.GetProductValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductValidationOperationCompleted);
            }
            this.InvokeAsync("GetProductValidation", new object[] {
                        LicenseKey,
                        SystemID}, this.GetProductValidationOperationCompleted, userState);
        }
        
        private void OnGetProductValidationOperationCompleted(object arg) {
            if ((this.GetProductValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductValidationCompleted(this, new GetProductValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ActivateKey(string LicenseKey, string SystemID, string CustomerId, string RegisteredMobile, string RegisteredEmail) {
            object[] results = this.Invoke("ActivateKey", new object[] {
                        LicenseKey,
                        SystemID,
                        CustomerId,
                        RegisteredMobile,
                        RegisteredEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateKeyAsync(string LicenseKey, string SystemID, string CustomerId, string RegisteredMobile, string RegisteredEmail) {
            this.ActivateKeyAsync(LicenseKey, SystemID, CustomerId, RegisteredMobile, RegisteredEmail, null);
        }
        
        /// <remarks/>
        public void ActivateKeyAsync(string LicenseKey, string SystemID, string CustomerId, string RegisteredMobile, string RegisteredEmail, object userState) {
            if ((this.ActivateKeyOperationCompleted == null)) {
                this.ActivateKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateKeyOperationCompleted);
            }
            this.InvokeAsync("ActivateKey", new object[] {
                        LicenseKey,
                        SystemID,
                        CustomerId,
                        RegisteredMobile,
                        RegisteredEmail}, this.ActivateKeyOperationCompleted, userState);
        }
        
        private void OnActivateKeyOperationCompleted(object arg) {
            if ((this.ActivateKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateKeyCompleted(this, new ActivateKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendReportError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendReportError(string CustomerId, string softwareVersion, string Message) {
            object[] results = this.Invoke("SendReportError", new object[] {
                        CustomerId,
                        softwareVersion,
                        Message});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendReportErrorAsync(string CustomerId, string softwareVersion, string Message) {
            this.SendReportErrorAsync(CustomerId, softwareVersion, Message, null);
        }
        
        /// <remarks/>
        public void SendReportErrorAsync(string CustomerId, string softwareVersion, string Message, object userState) {
            if ((this.SendReportErrorOperationCompleted == null)) {
                this.SendReportErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendReportErrorOperationCompleted);
            }
            this.InvokeAsync("SendReportError", new object[] {
                        CustomerId,
                        softwareVersion,
                        Message}, this.SendReportErrorOperationCompleted, userState);
        }
        
        private void OnSendReportErrorOperationCompleted(object arg) {
            if ((this.SendReportErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendReportErrorCompleted(this, new SendReportErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLatestVersion(string CustomerId, string CustomerVersion) {
            object[] results = this.Invoke("GetLatestVersion", new object[] {
                        CustomerId,
                        CustomerVersion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestVersionAsync(string CustomerId, string CustomerVersion) {
            this.GetLatestVersionAsync(CustomerId, CustomerVersion, null);
        }
        
        /// <remarks/>
        public void GetLatestVersionAsync(string CustomerId, string CustomerVersion, object userState) {
            if ((this.GetLatestVersionOperationCompleted == null)) {
                this.GetLatestVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionOperationCompleted);
            }
            this.InvokeAsync("GetLatestVersion", new object[] {
                        CustomerId,
                        CustomerVersion}, this.GetLatestVersionOperationCompleted, userState);
        }
        
        private void OnGetLatestVersionOperationCompleted(object arg) {
            if ((this.GetLatestVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestVersionCompleted(this, new GetLatestVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVersionDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVersionDetails(string CustomerVersion) {
            object[] results = this.Invoke("GetVersionDetails", new object[] {
                        CustomerVersion});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionDetailsAsync(string CustomerVersion) {
            this.GetVersionDetailsAsync(CustomerVersion, null);
        }
        
        /// <remarks/>
        public void GetVersionDetailsAsync(string CustomerVersion, object userState) {
            if ((this.GetVersionDetailsOperationCompleted == null)) {
                this.GetVersionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetVersionDetails", new object[] {
                        CustomerVersion}, this.GetVersionDetailsOperationCompleted, userState);
        }
        
        private void OnGetVersionDetailsOperationCompleted(object arg) {
            if ((this.GetVersionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionDetailsCompleted(this, new GetVersionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCusomerBuildVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCusomerBuildVersion(string CustomerId, string CustomerVersion) {
            object[] results = this.Invoke("UpdateCusomerBuildVersion", new object[] {
                        CustomerId,
                        CustomerVersion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCusomerBuildVersionAsync(string CustomerId, string CustomerVersion) {
            this.UpdateCusomerBuildVersionAsync(CustomerId, CustomerVersion, null);
        }
        
        /// <remarks/>
        public void UpdateCusomerBuildVersionAsync(string CustomerId, string CustomerVersion, object userState) {
            if ((this.UpdateCusomerBuildVersionOperationCompleted == null)) {
                this.UpdateCusomerBuildVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCusomerBuildVersionOperationCompleted);
            }
            this.InvokeAsync("UpdateCusomerBuildVersion", new object[] {
                        CustomerId,
                        CustomerVersion}, this.UpdateCusomerBuildVersionOperationCompleted, userState);
        }
        
        private void OnUpdateCusomerBuildVersionOperationCompleted(object arg) {
            if ((this.UpdateCusomerBuildVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCusomerBuildVersionCompleted(this, new UpdateCusomerBuildVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommodityRates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommodityRates(string API_KEY, string CustomerID, System.DateTime DataDate) {
            object[] results = this.Invoke("GetCommodityRates", new object[] {
                        API_KEY,
                        CustomerID,
                        DataDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommodityRatesAsync(string API_KEY, string CustomerID, System.DateTime DataDate) {
            this.GetCommodityRatesAsync(API_KEY, CustomerID, DataDate, null);
        }
        
        /// <remarks/>
        public void GetCommodityRatesAsync(string API_KEY, string CustomerID, System.DateTime DataDate, object userState) {
            if ((this.GetCommodityRatesOperationCompleted == null)) {
                this.GetCommodityRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommodityRatesOperationCompleted);
            }
            this.InvokeAsync("GetCommodityRates", new object[] {
                        API_KEY,
                        CustomerID,
                        DataDate}, this.GetCommodityRatesOperationCompleted, userState);
        }
        
        private void OnGetCommodityRatesOperationCompleted(object arg) {
            if ((this.GetCommodityRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommodityRatesCompleted(this, new GetCommodityRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetKeyStatusCompletedEventHandler(object sender, GetKeyStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeyStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeyStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProductValidationCompletedEventHandler(object sender, GetProductValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ActivateKeyCompletedEventHandler(object sender, ActivateKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SendReportErrorCompletedEventHandler(object sender, SendReportErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendReportErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendReportErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetLatestVersionCompletedEventHandler(object sender, GetLatestVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetVersionDetailsCompletedEventHandler(object sender, GetVersionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateCusomerBuildVersionCompletedEventHandler(object sender, UpdateCusomerBuildVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCusomerBuildVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCusomerBuildVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetCommodityRatesCompletedEventHandler(object sender, GetCommodityRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommodityRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommodityRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591